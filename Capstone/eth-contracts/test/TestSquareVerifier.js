// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

contract('Verifier', accounts => {

    const addr = accounts[0];
    const proof = require("../../scripts/proof_2_4.json");
    const wrong_proof = require("../../scripts/wrong_proof.json");

    // correct proof
    const proofs = Object.values(proof.proof);
    const inputs = proof.inputs;

    // incorrect proof
    const wrong_proofs = Object.values(wrong_proof.proof);
    const wrong_inputs = wrong_proof.inputs;

    describe('test square verifier - zokrates', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({ from: addr, gas: 4700000 });
        })

        // Test verification with correct proof
        it('Test verification with correct proof', async function () {
            let isCorrect = await this.contract.verifyTx.call(...proofs, inputs, { from: addr });
            assert.equal(true, isCorrect, "Invalid proof result");
        })

        // Test verification with incorrect proof
        it('Test verification with incorrect proof', async function () {
            let isCorrect = await this.contract.verifyTx.call(...wrong_proofs, wrong_inputs, { from: addr });
            assert.equal(false, isCorrect, "Invalid proof result");
        })

    });
})
